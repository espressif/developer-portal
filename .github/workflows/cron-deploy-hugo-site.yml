name: Cron job to redeploy Hugo site daily

on:
  schedule:
    - cron: '5 0 * * *'
  # Allow manual runs from the Actions tab
  workflow_dispatch:

# Set permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  build-and-deploy:
    if: github.repository_owner == 'espressif'
    runs-on: ubuntu-latest
    steps:

      - name: Install Hugo CLI
        env:
          HUGO_VERSION: 0.135.0
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Check out repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build website with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify

      - name: Copy files to AWS S3 with AWS CLI
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete --exclude "persist/*"
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET_NAME }}
          SOURCE_DIR: './public'
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  invalidate-cache:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    steps:

      - name: Invalidate cloudfront cache
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          PATHS: "/*"
          DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
